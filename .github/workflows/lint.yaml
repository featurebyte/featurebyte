name: lint
'on':
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
permissions: read-all
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true
jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version:
          - 3.10.14
    steps:
      - uses: actions/checkout@v4
      - uses: arduino/setup-task@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          version: 3.x
      - name: Install Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: 1.8.2
      - name: Configure Poetry
        run: poetry config virtualenvs.in-project true
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'
      - name: Install packages needed for build
        run: |-
          sudo apt-get update
          sudo apt-get install libkrb5-dev libsasl2-dev libpython3-dev g++ gcc
      - name: Lint Checks
        run: task lint:pr
      - name: pip-audit check [ONLY MAIN]
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        run: task lint:safety
  slack:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs:
      - lint
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - if: ${{ github.event_name == 'pull_request' }}
        name: Get Author Email (PR)
        run: echo "AUTHOR_EMAIL=$(git show -s --format='%ae' "origin/${{ github.head_ref }}")" >> $GITHUB_ENV
      - if: ${{ github.event_name != 'pull_request' }}
        name: Get Author Email (PUSH)
        run: echo "AUTHOR_EMAIL=$(git show -s --format='%ae' "origin/${{ github.ref_name }}")" >> $GITHUB_ENV
      - name: Get Channel ID
        run: |-
          echo "${{ secrets.SLACK_USERS }}" > users.csv
          export AUTHOR_ID="$(grep -oP "${{ env.AUTHOR_EMAIL }},\s*\K[^,]*" users.csv)"
          if [ "${AUTHOR_ID}" = "" ]; then
            echo "No Slack user found for ${AUTHOR_EMAIL}"
            export AUTHOR_ID="C03D81HC6Q5"  # Developer Channel
            exit 1
          fi
          echo "CHANNEL_ID=${AUTHOR_ID}" >> $GITHUB_ENV
      - name: Load LINT_RESULT into env
        run: echo "LINT_RESULT=${{ needs.lint.result }}" >> $GITHUB_ENV
      - name: Load REPOSITORY into env
        run: echo "REPOSITORY=$(echo '${{ github.repository }}' | cut -d / -f2)" >> $GITHUB_ENV
      - name: Send Slack notification with workflow result.
        uses: slackapi/slack-github-action@v1.27.0
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_OAUTH }}
        with:
          channel-id: ${{ env.CHANNEL_ID }}
          payload: |-
            {
                "text": "${{ env.REPOSITORY }} [${{ github.workflow }}] [${{ env.LINT_RESULT }}]",
                "blocks": [
                    {
                        "type": "section",
                        "text": {
                            "type": "mrkdwn",
                            "text": "`${{ env.REPOSITORY }} [${{ github.workflow }}]`: ${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                        }
                    },
                    {
                        "type": "section",
                        "text": {
                            "type": "mrkdwn",
                            "text": "```lint: [${{ env.LINT_RESULT }}]```"
                        }
                    }
                ]
            }
