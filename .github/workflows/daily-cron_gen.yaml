# THIS FILE IS GENERATED. PLEASE DO NOT MODIFY DIRECTLY.
# Please refer to the `daily_cron.py` file in the `featurebyte/infrastructure` repo if you want to update it.

name: Daily Maintenance
'on':
  workflow_dispatch: {}
  schedule:
    cron: 0 0 * * *
permissions:
  actions: write
  contents: write
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true
jobs:
  cache:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
        - 3.8.12
    steps:
    - name: Clear cache
      uses: actions/github-script@v6
      with:
        script: |
          console.log("About to clear")
          const caches = await github.rest.actions.getActionsCacheList({
            owner: context.repo.owner,
            repo: context.repo.repo,
          })
          for (const cache of caches.data.actions_caches) {
            console.log(cache)
            github.rest.actions.deleteActionsCacheById({
              owner: context.repo.owner,
              repo: context.repo.repo,
              cache_id: cache.id,
            })
          }
          console.log("Clear completed")
    - uses: actions/checkout@v3
    - uses: arduino/setup-task@v1
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        version: 3.x
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup cache
      uses: actions/cache@v3
      with:
        path: .venv
        key: poetry-cache-${{ runner.os }}-${{ matrix.python-version }}
    - name: Install Poetry
      uses: abatilo/actions-poetry@v2
      with:
        poetry-version: 1.3.1
    - name: Configure Poetry
      run: poetry config virtualenvs.in-project true
    - name: Install packages needed for build
      run: sudo apt-get install libsasl2-dev gcc
    - name: Run task install
      run: task install
  tags:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set Github Committer Settings
      run: |-
        git config --global user.name "featurebyte[bot]"
        git config --global user.email "featurebyte[bot]@users.noreply.github.com"
    - name: Removing Tags
      run: |-
        export CUTOFF_DATE=$(date --date="-14days" +%Y-%m-%d)
        export EXPIRED_TAGS=$(git for-each-ref --format '%(creatordate:short) %(refname)' refs/tags | grep -v "release/" | awk -v "CUTOFF_DATE=$CUTOFF_DATE" '{ if ($1 < CUTOFF_DATE) print $2; }')

        echo "### Expired tags" >> $GITHUB_STEP_SUMMARY
        printenv EXPIRED_TAGS >> $GITHUB_STEP_SUMMARY

        # => Convert ref/tags/ABC = :ref/tags/ABC
        # => git push origin :ref/tags/ABC
        printenv EXPIRED_TAGS | sed -nE 's/^/:/p' | xargs git push origin
