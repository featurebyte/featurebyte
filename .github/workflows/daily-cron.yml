name: "Daily Maintenance"
on:
  workflow_dispatch: {}
  schedule:
    - cron: '0 0 * * *' # On 00:00 Everyday
# Permission to push (DELETE) tags
permissions:
  actions: write
  contents: write
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true
jobs:
  cache:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8.12"]
    steps:
      - name: Clear cache
        uses: actions/github-script@v6
        with:
          script: |
            console.log("About to clear")
            const caches = await github.rest.actions.getActionsCacheList({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            for (const cache of caches.data.actions_caches) {
              console.log(cache)
              github.rest.actions.deleteActionsCacheById({
                owner: context.repo.owner,
                repo: context.repo.repo,
                cache_id: cache.id,
              })
            }
            console.log("Clear completed")
      # Recreates the cache
      - uses: actions/checkout@v3
      - uses: arduino/setup-task@v1
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup cache
        uses: actions/cache@v3
        with:
          path: .venv
          key: poetry-cache-${{ runner.os }}-${{ matrix.python-version }} # Send it to base cache
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: 1.3.1
      - name: Configure Poetry
        run: |
          poetry config virtualenvs.in-project true
      - name: Adding C headers
        run: |
          sudo apt-get install libsasl2-dev gcc
      - name: Install dependencies
        run: task install
  # Removing tags older than 30 days
  # Ignoring release/* tags
  tags:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: "Setup Git"
        run: |
          git config --global user.name "featurebyte[bot]"
          git config --global user.email "featurebyte[bot]@users.noreply.github.com"
      - name: "Removing Tags"
        run: |
          export CUTOFF_DATE=$(date --date="-14days" +%Y-%m-%d)
          export EXPIRED_TAGS=$(git for-each-ref --format '%(creatordate:short) %(refname)' refs/tags | grep -v "release/" | awk -v "CUTOFF_DATE=$CUTOFF_DATE" '{ if ($1 < CUTOFF_DATE) print $2; }')

          echo "### Expired tags" >> $GITHUB_STEP_SUMMARY
          printenv EXPIRED_TAGS >> $GITHUB_STEP_SUMMARY

          # => Convert ref/tags/ABC = :ref/tags/ABC
          # => git push origin :ref/tags/ABC
          printenv EXPIRED_TAGS | sed -nE 's/^/:/p' | xargs git push origin
