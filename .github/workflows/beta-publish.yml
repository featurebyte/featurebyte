name: beta-publish

on:
  workflow_dispatch: {}

permissions: write-all

env:
  # Python
  GCR_PYPI_PROJECT_ID: vpc-host-nonprod-xa739-xz970
  GCR_PYPI_REPO: featurebyte-pypi
  GCR_PYPI_LOCATION: us-central1
  POETRY_HTTP_BASIC_FEATUREBYTE_NP_USERNAME: _json_key_base64                           # Poetry to pull from google artifact factory [references pyproject.toml (tool.poetry.source).name]
  POETRY_HTTP_BASIC_FEATUREBYTE_NP_PASSWORD: ${{ secrets.GCR_PYPI_CREDENTIALS_R_B64 }}  # Poetry to pull from google artifact factory [references pyproject.toml (tool.poetry.source).name]
  # Docker
  GCR_DOCKER_PROJECT_ID: beta-testing-373907
  GCR_DOCKER_REPO: docker
  GCR_DOCKER_LOCATION: us-central1


jobs:
  publish-beta:
    runs-on: ubuntu-20.04
    timeout-minutes: 300
    strategy:
      matrix:
        python-version: [ "3.8" ]
    steps:
      - uses: actions/checkout@v3
      - name: Set Docker Image Ctx
        run: |
          export IMAGE_REPO=$(printf "%s-docker.pkg.dev/%s/%s/featurebyte-beta\n" $GCR_DOCKER_LOCATION $GCR_DOCKER_PROJECT_ID $GCR_DOCKER_REPO)
          export IMAGE_TAG=$(git rev-parse --short HEAD)
          echo "IMAGE_REPO=${IMAGE_REPO}" >> $GITHUB_ENV
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup cache
        uses: actions/cache@v3
        with:
          path: .venv
          key: poetry-cache-${{ runner.os }}-${{ matrix.python-version }}-${{ github.job }}
          restore-keys: poetry-cache-${{ runner.os }}-${{ matrix.python-version }}

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: 1.3.1

      - name: Configure Poetry
        run: |
          poetry config virtualenvs.in-project true
          poetry config http-basic.featurebyte_np ${POETRY_HTTP_BASIC_FEATUREBYTE_NP_USERNAME} ${POETRY_HTTP_BASIC_FEATUREBYTE_NP_PASSWORD}

      - name: Adding C headers
        run: |
          sudo apt-get install python-dev libsasl2-dev gcc

      - name: Build featurebyte
        run: |
          make install
          poetry build

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker
        uses: docker/setup-buildx-action@v2

      - name: Docker Login to Beta Artifact Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.GCR_DOCKER_LOCATION }}-docker.pkg.dev
          username: _json_key_base64
          password: ${{ secrets.BETA_DOCKER_CREDENTIALS_RW_B64 }}

      - name: Build & Tag & Push Image to Beta
        uses: docker/build-push-action@v4
        with:
          push: true
          file: docker/Dockerfile
          build-args: FEATUREBYTE_NP_PASSWORD=${{ secrets.GCR_PYPI_CREDENTIALS_R_B64 }}
          context: .
          platforms: |
            linux/amd64
            linux/arm64
          tags: |
            ${{ env.IMAGE_REPO }}:${{ env.IMAGE_TAG }}
            ${{ env.IMAGE_REPO }}:latest
