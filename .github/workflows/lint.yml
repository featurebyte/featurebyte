name: lint

on:
  workflow_dispatch:
  pull_request:
    types:
      [opened, synchronize, reopened]

env:
  # Python
  GCR_PYPI_PROJECT_ID: vpc-host-nonprod-xa739-xz970
  GCR_PYPI_REPO: featurebyte-pypi
  GCR_PYPI_LOCATION: us-central1
  POETRY_HTTP_BASIC_FEATUREBYTE_NP_USERNAME: _json_key_base64                           # Poetry to pull from google artifact factory [references pyproject.toml (tool.poetry.source).name]
  POETRY_HTTP_BASIC_FEATUREBYTE_NP_PASSWORD: ${{ secrets.GCR_PYPI_CREDENTIALS_RW_B64 }} # Poetry to pull from google artifact factory [references pyproject.toml (tool.poetry.source).name]

jobs:
  lint_flags:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    outputs:
      changes: ${{ steps.workflow_flags.outputs.CHANGES }}
    strategy:
      matrix:
        python-version: [ "3.8.0" ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'  # Used for checking diff

      - name: Workflow Flags
        id: workflow_flags
        run: echo "CHANGES=$(git diff origin/main..HEAD -- featurebyte/ tests/ pyproject.toml | wc -l) " >> $GITHUB_OUTPUT

  lint:
    needs: [lint_flags]
    if: ${{ needs.lint_flags.outputs.changes != 0 }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: ["3.8.0"]
    steps:
    - uses: actions/checkout@v3

    - name: Set up defaults
      run: |
        echo "REPOSITORY=$(grep -oP '/\K.+' <<< $GITHUB_REPOSITORY)" >> $GITHUB_ENV

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Setup cache
      uses: actions/cache@v3
      with:
        path: .venv
        key: poetry-cache-${{ runner.os }}-${{ matrix.python-version }}-${{ github.job }}

    - name: Install Poetry
      run: |
        python -m pip install --extra-index-url "https://_json_key_base64:${{ secrets.GCR_PYPI_CREDENTIALS_RW_B64 }}@${GCR_PYPI_LOCATION}-python.pkg.dev/${GCR_PYPI_PROJECT_ID}/${GCR_PYPI_REPO}/simple/" poetry==1.2.0rc99
        poetry config virtualenvs.in-project true

    - name: Install dependencies
      run: make install

    - name: Lint Checks
      run: make lint
