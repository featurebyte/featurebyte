name: build

on:
  pull_request:
    types:
      [opened, synchronize, reopened]
  push:
    branches:
      - main

env:
  SNOWFLAKE_USER: github
  SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
  SNOWFLAKE_ACCOUNT: "fm54506.us-central1.gcp"
  SNOWFLAKE_WAREHOUSE: COMPUTE_WH
  SNOWFLAKE_DATABASE: FEATUREBYTE_TESTING
  SNOWFLAKE_SCHEMA: PUBLIC
  SNOWFLAKE_SCHEMA_FEATUREBYTE: FEATUREBYTE
  GIT_SSH_KEY_PATH: "/tmp/git_key"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4.0.0
      with:
        python-version: ${{ matrix.python-version }}

    - uses: abatilo/actions-poetry@v2.1.5

    - name: Set up cache
      uses: actions/cache@v3.0.4
      with:
        path: .venv
        key: venv-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('poetry.lock') }}

    - name: Install dependencies
      run: |
        poetry config virtualenvs.in-project true
        make install

    - name: Run style checks
      run: |
        make check-codestyle

    - name: Run static typing checks
      run: |
        make mypy

    - name: Run tests
      run: |
        echo "${{ secrets.PLAYGROUND_PRIVATE_KEY }}" > /tmp/git_key
        chmod 400 /tmp/git_key
        git config --global user.email "github@featurebyte.com"
        git config --global user.name "FeatureByte Github Testing"
        make test

    - name: Run safety checks
      run: |
        make check-safety
