version: '3'

tasks:

  install:
    desc: "Install dependencies"
    cmds:
      - poetry install --sync

  format:
    desc: "Format python code"
    cmds:
      - poetry run isort .
      - poetry run black .

  lint:
    desc: "Lint the code"
    cmds:
      - poetry run isort --diff --check-only --settings-path pyproject.toml .
      - poetry run black --diff --check .

  archive:
    desc: "Create MAR archive with torch model"
    cmds:
      - rm -rf transformer.mar
      - torch-model-archiver --model-name transformer --version 1.0 --handler ./serving/handler.py

  run-local:
    desc: "Run TorchServe locally"
    deps:
      - task: archive
    cmds:
      - rm -rf ./model_store && mkdir ./model_store
      - cp transformer.mar ./model_store
      - torchserve --start --model-store ./model_store --ts-config ./config.properties --ncs

  stop-local:
    desc: "Stop local TorchServe"
    cmds:
      - torchserve --stop

  build-docker:
    desc: "Build a docker container with TorchServe serving running on CPU"
    deps:
      - task: archive
    cmds:
      - docker build --pull --rm -t transformers-serving .

  run-docker:
    desc: "Run docker container with TorchServe"
    deps:
      - task: build-docker
    cmds:
      - docker rm -f transformers-serving-instance || true
      - |
        docker run \
          --name transformers-serving-instance --rm \
          -p 127.0.0.1:8080:8080 \
          -p 127.0.0.1:8081:8081 \
          -p 127.0.0.1:8082:8082 \
          -d transformers-serving:latest
