<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="5" skipped="0" tests="5" time="57.934" timestamp="2024-03-26T16:12:37.856554" hostname="desktop"><testcase classname="tests.notebooks.test_notebooks" name="test_quick_start_notebooks[notebooks0]" time="11.067"><failure message="assert 1 == 0&#10; +  where 1 = CompletedProcess(args=&quot;jupyter nbconvert --to notebook --execute --ExecutePreprocessor.kernel_name=python3 --output /tmp/output.ipynb './docs/notebooks/quick start reusing features - final.ipynb'&quot;, returncode=1).returncode">quick_start_notebooks = PosixPath('docs/notebooks/quick start reusing features - final.ipynb')

    @pytest.mark.parametrize(
        "quick_start_notebooks", list(NOTEBOOKS_PATH.glob("quick*.ipynb")), ids=idfn
    )
    def test_quick_start_notebooks(quick_start_notebooks):
        result = notebook_runner(quick_start_notebooks)
&gt;       assert result.returncode == 0
E       assert 1 == 0
E        +  where 1 = CompletedProcess(args="jupyter nbconvert --to notebook --execute --ExecutePreprocessor.kernel_name=python3 --output /tmp/output.ipynb './docs/notebooks/quick start reusing features - final.ipynb'", returncode=1).returncode

tests/notebooks/test_notebooks.py:25: AssertionError</failure></testcase><testcase classname="tests.notebooks.test_notebooks" name="test_quick_start_notebooks[notebooks1]" time="10.940"><failure message="assert 1 == 0&#10; +  where 1 = CompletedProcess(args=&quot;jupyter nbconvert --to notebook --execute --ExecutePreprocessor.kernel_name=python3 --output /tmp/output.ipynb './docs/notebooks/quick start model training - final.ipynb'&quot;, returncode=1).returncode">quick_start_notebooks = PosixPath('docs/notebooks/quick start model training - final.ipynb')

    @pytest.mark.parametrize(
        "quick_start_notebooks", list(NOTEBOOKS_PATH.glob("quick*.ipynb")), ids=idfn
    )
    def test_quick_start_notebooks(quick_start_notebooks):
        result = notebook_runner(quick_start_notebooks)
&gt;       assert result.returncode == 0
E       assert 1 == 0
E        +  where 1 = CompletedProcess(args="jupyter nbconvert --to notebook --execute --ExecutePreprocessor.kernel_name=python3 --output /tmp/output.ipynb './docs/notebooks/quick start model training - final.ipynb'", returncode=1).returncode

tests/notebooks/test_notebooks.py:25: AssertionError</failure></testcase><testcase classname="tests.notebooks.test_notebooks" name="test_quick_start_notebooks[notebooks2]" time="10.898"><failure message="assert 1 == 0&#10; +  where 1 = CompletedProcess(args=&quot;jupyter nbconvert --to notebook --execute --ExecutePreprocessor.kernel_name=python3 --output /tmp/output.ipynb './docs/notebooks/quick start feature engineering - final.ipynb'&quot;, returncode=1).returncode">quick_start_notebooks = PosixPath('docs/notebooks/quick start feature engineering - final.ipynb')

    @pytest.mark.parametrize(
        "quick_start_notebooks", list(NOTEBOOKS_PATH.glob("quick*.ipynb")), ids=idfn
    )
    def test_quick_start_notebooks(quick_start_notebooks):
        result = notebook_runner(quick_start_notebooks)
&gt;       assert result.returncode == 0
E       assert 1 == 0
E        +  where 1 = CompletedProcess(args="jupyter nbconvert --to notebook --execute --ExecutePreprocessor.kernel_name=python3 --output /tmp/output.ipynb './docs/notebooks/quick start feature engineering - final.ipynb'", returncode=1).returncode

tests/notebooks/test_notebooks.py:25: AssertionError</failure></testcase><testcase classname="tests.notebooks.test_notebooks" name="test_quick_start_notebooks[notebooks3]" time="11.154"><failure message="assert 1 == 0&#10; +  where 1 = CompletedProcess(args=&quot;jupyter nbconvert --to notebook --execute --ExecutePreprocessor.kernel_name=python3 --output /tmp/output.ipynb './docs/notebooks/quick start feature management - final.ipynb'&quot;, returncode=1).returncode">quick_start_notebooks = PosixPath('docs/notebooks/quick start feature management - final.ipynb')

    @pytest.mark.parametrize(
        "quick_start_notebooks", list(NOTEBOOKS_PATH.glob("quick*.ipynb")), ids=idfn
    )
    def test_quick_start_notebooks(quick_start_notebooks):
        result = notebook_runner(quick_start_notebooks)
&gt;       assert result.returncode == 0
E       assert 1 == 0
E        +  where 1 = CompletedProcess(args="jupyter nbconvert --to notebook --execute --ExecutePreprocessor.kernel_name=python3 --output /tmp/output.ipynb './docs/notebooks/quick start feature management - final.ipynb'", returncode=1).returncode

tests/notebooks/test_notebooks.py:25: AssertionError</failure></testcase><testcase classname="tests.notebooks.test_notebooks" name="test_quick_start_notebooks[notebooks4]" time="13.673"><failure message="assert 1 == 0&#10; +  where 1 = CompletedProcess(args=&quot;jupyter nbconvert --to notebook --execute --ExecutePreprocessor.kernel_name=python3 --output /tmp/output.ipynb './docs/notebooks/quick start end-to-end workflow - final.ipynb'&quot;, returncode=1).returncode">quick_start_notebooks = PosixPath('docs/notebooks/quick start end-to-end workflow - final.ipynb')

    @pytest.mark.parametrize(
        "quick_start_notebooks", list(NOTEBOOKS_PATH.glob("quick*.ipynb")), ids=idfn
    )
    def test_quick_start_notebooks(quick_start_notebooks):
        result = notebook_runner(quick_start_notebooks)
&gt;       assert result.returncode == 0
E       assert 1 == 0
E        +  where 1 = CompletedProcess(args="jupyter nbconvert --to notebook --execute --ExecutePreprocessor.kernel_name=python3 --output /tmp/output.ipynb './docs/notebooks/quick start end-to-end workflow - final.ipynb'", returncode=1).returncode

tests/notebooks/test_notebooks.py:25: AssertionError</failure></testcase></testsuite></testsuites>
