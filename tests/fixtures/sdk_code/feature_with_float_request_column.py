# Generated by SDK version: {sdk_version}
from bson import ObjectId
from featurebyte import EventTable
from featurebyte import FeatureJobSetting
from featurebyte.api.request_column import RequestColumn
from featurebyte.enum import DBVarType

request_col = RequestColumn.create_request_column(
    "transaction_value", DBVarType.FLOAT
)
event_table = EventTable.get_by_id(ObjectId("{table_id}"))
event_view = event_table.get_view(
    view_mode="manual",
    drop_column_names=["created_at"],
    column_cleaning_operations=[],
)
grouped = event_view.groupby(by_keys=["cust_id"], category=None).aggregate_over(
    value_column="col_float",
    method="sum",
    windows=["1d"],
    feature_names=["sum_1d"],
    feature_job_setting=FeatureJobSetting(
        blind_spot="600s", frequency="1800s", time_modulo_frequency="300s"
    ),
    skip_fill_na=True,
)
feat = grouped["sum_1d"]
feat_1 = feat > (request_col * 1.2)
feat_1.name = "Historical Value Larger Than Transaction Value"
output = feat_1
