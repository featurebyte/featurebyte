# Poetry pyproject.toml: https://python-poetry.org/docs/pyproject/

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry_core>=1.0.0"]

[tool.bandit]
skips = ["B608"]

[tool.black]  # https://github.com/psf/black
color = true
exclude = '/(\.direnv|\.eggs|\.git|\.hg|\.mypy_cache|\.nox|\.tox|\.venv|venv|\.svn|_build|buck-out|build|dist|__pypackages__|docker|tests/fixtures/sdk_code)/'
line-length = 100
target-version = ["py38"]

[tool.coverage.report] # https://coverage.readthedocs.io/en/6.4.1/config.html#run
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
    "@abstractmethod",
    "NotImplementedError",
]
fail_under = 0  # Do not allow failure but report in Pull Request
show_missing = true

[tool.coverage.run]
branch = true
command_line = "-m pytest -c pyproject.toml --timeout=120 --junitxml=pytest.xml tests featurebyte"
source = ["featurebyte"]

[tool.isort]  # https://github.com/PyCQA/isort
color_output = true
include_trailing_comma = true
indent = 4
known_typing = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]
line_length = 100
multi_line_output = 3
profile = "black"
sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
skip_glob = ["tests/fixtures/sdk_code/*"]

[tool.mypy]  # https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
allow_redefinition = false
check_untyped_defs = true
color_output = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = false
disallow_untyped_defs = true
exclude = ['tests', 'docs', 'docker', '.github', 'featurebyte/api/templates', 'notebooks/prebuilt_catalogs.py']
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
pretty = true
python_version = 3.8
show_column_numbers = true
show_error_codes = true
show_error_context = true
show_traceback = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.poetry]
authors = ["FeatureByte <it-admin@featurebyte.com>"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "License :: Other/Proprietary License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
]
description = "Python Library for FeatureOps"
documentation = "https://docs.featurebyte.com"
homepage = "https://featurebyte.com"
include = [
    "featurebyte/sql/spark/*.jar",
]
keywords = []
license = "Elastic License 2.0"
name = "featurebyte"
readme = "README.md"
repository = "https://github.com/featurebyte/featurebyte"
version = "1.0.0"

[tool.poetry.dependencies]
PyYAML = "^6.0"
aiobotocore = { version = "^2.4.0", extras = ["boto3"] }
aiofiles = "^22.1.0"
aioredis = { version = "^2.0.1", optional = true }
alive-progress = "^3.1.1"
asyncache = "^0.3.1"
black = "^23.3.0"
cachetools = { version = "^5.2.0", optional = true }
celery = { version = "^5.2.6", extras = ["redis"], optional = true }
celerybeat-mongo = { version = "^0.2.0", optional = true }
cryptography = "^41.0.3"
databricks-sdk = { version = "^0.13.0", optional = true }
databricks-sql-connector = { version = "2.8.0", optional = true }  # Awaiting snowflake-connector-python to support urllib3>=2.0
fastapi = { version =  "^0.96.0", optional = true }
feast = { version = "^0.34.1", optional = true, extras = ["snowflake", "redis"]}
featurebyte-freeware = { version = "^0.2.16", optional = true }
gevent = {version = "^23.9.1", optional = true}
humanize = "^4.4.0"
importlib_metadata = { version = "*", python = "^3.8"}
jinja2 = "^3.1.2"
lazy-object-proxy = "^1.7.1"
motor = { version = "^3.0.0", optional = true }
orjson = "^3.8.3"
pandas = "^1.5.3"
pdfkit = { version = "^1.0.0", optional = true }
pyarrow = "^10"
pydantic = "^1.9.6"
pyhive = { version = "^0.6.5", optional = true }
pymongo = "^4.1.1"
python = ">=3.8,<3.12"
python-multipart = "^0.0.6"
python-on-whales = "^0.60.0"
redis = {version = "^4.5.3", optional = true, allow-prereleases = true}
requests = "^2.27.1"
requests-kerberos = { version = "^0.14.0", optional = true }
rich = "^13.3.4"
sasl = { version = "^0.3.1", optional = true }
smart-open = { version = "^6.3.0", extras = ["azure", "gcs"], optional = true }
snowflake-connector-python = { version = "^3.6.0", optional = true }
sqlglot = "^10.1.3,<10.4"  # SQL generation doesn't match as >10.4 double quotes are missing
tenacity = {version ="^8.2.3", optional = true}
thrift-sasl = { version = "^0.4.3", optional = true }
typeguard = "^2.13.3"
typer = "^0.7.0"
typing-extensions = "4.5.0"
uvicorn = { version = "^0.21.1", extras = ["standard"], optional = true }
websocket-client = "^1.5.1"
wheel = "0.40.0"

[tool.poetry.extras]
server = ["cachetools", "databricks-sdk", "fastapi", "motor", "snowflake-connector-python", "uvicorn", "pdfkit", "pyhive", "sasl", "thrift-sasl", "smart-open", "celery", "redis", "celerybeat-mongo", "databricks-sql-connector", "featurebyte-freeware", "gevent", "aioredis", "requests-kerberos", "tenacity", "feast"]

[tool.poetry.group.dev.dependencies]
freezegun = "^1.2.1"
httpx = "^0.24.0"
junitparser = "^2.8.0"
jupyterlab = "^4.0.2"
mongomock = "^4.0.0"
mongomock-motor = "^0.0.12"
pip-licenses = "^3.5.4"
pre-commit = "^2.20.0"
pytest = "^7.2.0"
pytest-asyncio = "^0.19.0"
pytest-cov = "^4.0.0"
pytest-rerunfailures = "^11.1.2"
pytest-timeout = "^2.1.0"
pytest-xdist = "^3.0.2"
pyupgrade = "^2.37.2"
toml-sort = "^0.20.0"

[tool.poetry.group.docs.dependencies]
docstring-parser = "^0.15"
humanize = "^4.5.0"
mkautodoc = "^0.2.0"
mkdocs = "^1.4.1"
mkdocs-awesome-pages-plugin = "^2.9.0"
mkdocs-enumerate-headings-plugin = "^0.5.0"
mkdocs-gen-files = "^0.4.0"
mkdocs-git-authors-plugin = "^0.6.5"
mkdocs-git-revision-date-localized-plugin = "^1.1.0"
mkdocs-jupyter = "^0.24.2"
mkdocs-literate-nav = "^0.5.0"
mkdocs-minify-plugin = "^0.6.1"
mkdocs-print-site-plugin = "^2.3.4"
mkdocs-section-index = "^0.3.4"
mkdocs-table-reader-plugin = "^1.1.1"

[tool.poetry.group.lint.dependencies]
bandit = "^1.7.4"
darglint = "^1.8.1"
isort = { extras = ["colors"], version = "^5.10.1" }
mypy = "^0.981"
mypy-extensions = "^0.4.3"
pip-audit = "^2.4.4"
pylint = "^2.14.5"
types-Markdown = "^3.4.2.1"
types-PyYAML = "^6.0.11"
types-aiofiles = "^23.1.0.2"
types-backports = "^0.1.3"
types-cachetools = "^5.2.1"
types-chardet = "^5.0.2"
types-cryptography = "^3.3.21"
types-decorator = "^5.1.8.4"
types-paramiko = "^3.2.0.1"
types-pyOpenSSL = "^22.0.4"
types-python-dateutil = "^2.8.19.6"
types-pytz = "^2022.1.2"
types-redis = "^4.3.7"
types-requests = "^2.28.2"
types-setuptools = "^63.2.1"
types-simplejson = "^3.17.7"
types-six = "^1.16.21.9"
types-toml = "^0.10.0"
types-typed-ast = "^1.5.8.4"
types-tzlocal = "^4.2.2"
types-ujson = "^5.4.0"
types-urllib3 = "^1.26.16"

[tool.poetry.scripts]
featurebyte = "featurebyte.__main__:app"

[tool.pylint.classes]  # https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
max-args = 10
max-locals = 20

[tool.pylint.design]
max-attributes = 8
max-parents = 20

[tool.pylint.format]
max-line-length = 150

[tool.pylint.main]
disable = ["Miscellaneous"]
extension-pkg-whitelist = ["pydantic"]
ignored-modules = ["featurebyte_freeware"]
jobs = 0
output-format = "text"
recursive = false

[tool.pylint.similarities]
ignore-signatures = true
min-similarity-lines = 10

[tool.pytest.ini_options]
addopts = ["--strict-markers", "-v", "--doctest-modules", "--durations=50", "--doctest-continue-on-failure", "--ignore-glob=tests/fixtures/*"] # Extra options:
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]
markers = [
    "disable_task_manager_mock: disable use of autouse task manager fixture",
    "no_mock_websocket_client: skip mocking websocket client",
    "no_mock_api_client: skip mocking api client",
]
norecursedirs = ["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
