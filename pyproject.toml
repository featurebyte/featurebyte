# Packaging and building Python projects with uv
[build-system]
requires = ["uv_build>=0.8.12,<0.9.0"]
build-backend = "uv_build"

# https://docs.astral.sh/uv/concepts/build-backend/
[tool.uv.build-backend]
module-name = "featurebyte"
module-root = ""

# https://docs.astral.sh/uv/concepts/metadata/
# Metadata for the package.
# Add to the dependencies to include them in the distribution.
[project]
authors = [{name = "FeatureByte", email = "it-admin@featurebyte.com"}]
name = "featurebyte"
version = "3.2.0"
description = "Python Library for FeatureOps"
readme = "README.md"
requires-python = ">=3.10"
repository = "https://github.com/featurebyte/featurebyte"
documentation = "https://docs.featurebyte.com"
homepage = "https://featurebyte.com"
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "License :: Other/Proprietary License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
license = { file = "LICENSE" }
dependencies = [
  "aiofiles",
  "PyYAML",
  "alive-progress",
  "black",
  "cachetools",
  "cryptography",
  "humanize",
  "importlib-metadata",
  "jinja2",
  "lazy-object-proxy",
  "numpy",
  "orjson",
  "pandas<2", # pickle files in test not compatible with pandas 2.x
  "pillow",
  "pyarrow",
  "pydantic",
  "pydantic-settings",
  "pymongo",
  "pyopenssl",
  "python-on-whales",
  "python-multipart",
  "requests",
  "rich",
  "sqlglot",
  "typeguard",
  "typer",
  "typing-extensions",
  "croniter",
  "websocket-client",
  "pydantic-extra-types",
]

[project.optional-dependencies]
server = [
  "asyncache",
  "celery[redis]",
  "celerybeat-mongo",
  "databricks-sdk",
  "databricks-sql-connector",
  "fastapi",
  "feast[snowflake,redis,mysql,gcp]",
  "featurebyte-freeware",
  "gevent",
  "google-cloud-bigquery",
  "motor",
  "pdfkit",
  "pyhive[hive_pure_sasl]",
  "redis",
  "requests-kerberos",
  "smart-open[azure,gcs]",
  "snowflake-connector-python",
  "thrift-sasl",
  "uvicorn[standard]",
  "google-cloud-bigquery-storage",
  "aioboto3",
]

[dependency-groups]
dev = [
  { include-group = "lint" },
  { include-group = "test" },
]
test = [
  "tornado", # Maybe remove
  "freezegun",
  "junitparser",
  "mongomock",
  "mongomock-motor",
  "pre-commit",
  "pytest",
  "pytest-asyncio",
  "pytest-cov",
  "pytest-order",
  "pytest-rerunfailures",
  "pytest-split",
  "pytest-timeout",
  "pytest-xdist",
  "jupyterlab",
]
docs = [
  "docstring-parser",
  "mkautodoc",
  "mkdocs",
  "mkdocs-awesome-pages-plugin",
  "mkdocs-enumerate-headings-plugin",
  "mkdocs-gen-files",
  "mkdocs-git-authors-plugin",
  "mkdocs-git-revision-date-localized-plugin",
  "mkdocs-jupyter",
  "mkdocs-literate-nav",
  "mkdocs-minify-plugin",
  "mkdocs-print-site-plugin",
  "mkdocs-section-index",
  "mkdocs-table-reader-plugin",
]
lint = [
  "bandit",
  "darglint",
  "mypy",
  "mypy-extensions",
  "pip-audit",
  "types-Markdown",
  "types-PyYAML",
  "types-aiofiles",
  "types-backports",
  "types-cachetools",
  "types-chardet",
  "types-cryptography",
  "types-decorator",
  "types-paramiko",
  "types-protobuf",
  "types-pyOpenSSL",
  "types-pycurl",
  "types-python-dateutil",
  "types-pytz",
  "types-redis",
  "types-requests",
  "types-setuptools",
  "types-simplejson",
  "types-six",
  "types-toml",
  "types-typed-ast",
  "types-tzlocal",
  "types-ujson",
  "types-urllib3",
  "toml-sort",
  "ruff",
  "types-croniter",
]

[tool.poetry.group.dev.dependencies]
protobuf = ">=4.25.8"
urllib3 = ">=2.5.0"


[tool.pytest.ini_options]
addopts = ["--strict-markers", "-v", "--doctest-modules", "--durations=50", "--doctest-continue-on-failure", "--ignore-glob=tests/fixtures/*"] # Extra options:
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]
filterwarnings = [
  "ignore::Warning:pkg_resources",
  "ignore::Warning:mongomock",
]
markers = [
  "disable_task_manager_mock: disable use of autouse task manager fixture",
  "no_mock_websocket_client: skip mocking websocket client",
  "no_mock_api_client: skip mocking api client",
]
norecursedirs = ["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]

[tool.ruff]
preview = true
extend-exclude = ["scripts", "hive-udf", "docs", "docker", "assets", ".task", ".mypy_cache", "site", "tests/fixtures", "docs/notebooks/"]
line-length = 100
indent-width = 4
target-version = "py39"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.ruff.lint]
select = ["E1", "E4", "E7", "E9", "F", "I"]  # Rules to use by default. Consider adding "UP" for upgradability checks.
ignore = []
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["F841", "E722"]

[tool.ruff.lint.pycodestyle]
max-line-length = 150

[tool.bandit]
skips = ["B608"]

[tool.coverage.report] # https://coverage.readthedocs.io/en/6.4.1/config.html#run
exclude_lines = [
  "pragma: no cover",
  "if TYPE_CHECKING:",
  "@overload",
  "@abstractmethod",
  "NotImplementedError",
]
fail_under = 0  # Do not allow failure but report in Pull Request
show_missing = true

[tool.coverage.run]
branch = true
command_line = "-m pytest -c pyproject.toml --timeout=120 --junitxml=pytest.xml tests featurebyte"
source = ["featurebyte"]

[tool.mypy]  # https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
allow_redefinition = false
check_untyped_defs = true
color_output = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = false
disallow_untyped_defs = true
exclude = ['tests', 'docs', 'docker', '.github', 'featurebyte/api/templates', 'notebooks/prebuilt_catalogs.py']
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
pretty = true
python_version = "3.10"
show_column_numbers = true
show_error_codes = true
show_error_context = true
show_traceback = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true
